name: CI

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    …
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4 …
      - run: pip install -r requirements.txt
      - name: Run pytest with Allure results
        run: pytest --alluredir=allure-results --maxfail=1 --disable-warnings -q

      - name: Add environment metadata
        run: |
          echo "Environment=staging" >> allure-results/environment.properties
          echo "Browser=chrome"    >> allure-results/environment.properties

      - name: Debug: list raw results
        run: ls -R allure-results

      - uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

  report:
    needs: test
    …
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: ./allure-results
      - run: sudo apt-get update && sudo apt-get install -y default-jdk
      - run: |
          curl -sL https://github.com/allure-framework/allure2/releases/download/2.20.1/allure-2.20.1.tgz \
            | sudo tar zx -C /usr/local
          sudo ln -sf /usr/local/allure-2.20.1/bin/allure /usr/local/bin/allure
      - run: allure generate allure-results -o allure-report
      - uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

  deploy:
    needs: report
    …
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report
      - name: List report files
        run: ls -R allure-report
      - uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages



